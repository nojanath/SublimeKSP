%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html

name: KSP

file_extensions:
  - ksp

scope: source.ksp

variables:
  varchars: '[a-zA-Z0-9_.]'
  macrotoken: '\#{1}{{varchars}}+\#{1}'

contexts:
  main:
    - match: '\{\{'
      comment: Double curly bracket section comment (symbol list only)
      push:
        - meta_scope: comment.block.source.ksp, section.comment.source.ksp
        - match: '\}\}'
          pop: true

    - match: '\{'
      comment: Curly bracket block comment
      push:
        - meta_scope: comment.block.source.ksp
        - match: '\}'
          pop: true

    - match: '\(\*'
      comment: Old Pascal-style block comment
      push:
        - meta_scope: comment.block.source.ksp
        - match: '\*\)'
          pop: true

    - match: '/\*'
      comment: C-style block comment
      push:
        - meta_scope: comment.block.source.ksp
        - match: '\*/'
          pop: true

    - match: //
      comment: Comment
      push:
        - meta_scope: comment.source.ksp
        - match: \n|\r
          pop: true

    - match: '\band\b|\bor\b|\bxor\b|\bnot\b|[.]and[.]|[.]or[.]|[.]xor[.]|[.]not[.]|\bmod\b'
      comment: Operator
      scope: keyword.operator.source.ksp

    - match: '{{macrotoken}}'
      comment: Macro replacement token
      scope: variable.parameter.source.ksp

    - match: '(on\s+ui_control(s)?)(\s*\(([$%@?]?[a-zA-Z0-9_#.]+)\))?'
      comment: UI callback
      captures:
        0: entity.name.callback.source.ksp
        1: keyword.other.source.ksp
        2: keyword.other.source.ksp
        4: variable.source.ksp

    - match: '(?x)
               \b(on\s+
                 (async_complete|
                  controller|
                  init|
                  listener|
                  midi_in|
                  note|
                  (n)?rpn|
                  release|
                  persistence_changed|
                  (_)?pgs_changed|
                  poly_at|
                  ui_(controls|update)
                 )|
                 on_pgs_changed|on_post_init|on_release)
               \b'
      comment: Callback start
      scope: keyword.other.source.ksp entity.name.callback.source.ksp

    - match: \b(end\s+on|end_on)\b
      comment: Callback end
      scope: keyword.other.source.ksp

    - match: '\)\s*(on)'
      comment: Literate On
      captures:
        1: keyword.other.source.ksp

    - match: '(\s+-|(?<=[=,{}()\[\]])-)?((0x)[0-9a-fA-F]*|[0-9][0-9a-fA-F]*[hH]|b[01]+|[01]+b|(\d+\.\d+|\.\d+|\d+\.|\d+)([eE][+-]?\d+)?)\b'
      comment: Numerical constant
      scope: constant.numeric.source.ksp

    - match: "[,.()\\[\\]]"
      comment: Punctuation and brackets
      scope: punctuation

    - match: '(?x)
              (->)\s*
              (
                 active_index|allow_automation|automation_(id|name)|
                 (bar|bg|off|on|overload|peak|slicemarkers|wave(_cursor|_end)?|wavetable(_end)?|zero_line)_color|
                 (base|file)path|(bg|wave(_end)?|wavetable(_end)?)_alpha|
                 column_width|cursor_picture|custom_id|
                 default(_value)?|disable_text_shifting|dnd_(accept_(array|audio|midi)|behaviour)|
                 enable_dnd|
                 file_type|font_type(_off_hover|_off_pressed|_on|_on_hover|_on_pressed)?|
                 grid_(height|width|x|y)|
                 height|help|hide|
                 identifier|
                 key_(alt|control|shift)|
                 label|
                 (max|min)_value|midi_export_area_idx|mouse_(behaviour(_x|_y)?|mode)|
                 nks_(num_values|str_values|style|type)|none|num_items|
                 parallax_(x|y)|
                 parent_panel|picture(_state)?|(pos_)?(x|y)|range_(max|min)|receive_drag_events|
                 selected_item_idx|short_name|show_arrows|
                 text(_alignment|line|pos_y)?|type|
                 unit|
                 value(pos_y)?|vertical|
                 (wf|wt)_vis_mode|width|wt_zone|
                 z_layer|

                 allow_group|
                 custom|
                 id|
                 midi_(byte_[1-2]|channel|command)|mod_value_(ex_)?id|
                 note(_length)?|
                 pan|(play_)?pos|par_[0-3]|
                 source|
                 track_nr|tune|
                 (rel_)?velocity|volume|
                 zone_id
              )
              \b' # empty line separates control parameter shorthands from event parameter shorthands!
      comment: Control and event parameter shorthands
      captures:
        1: operator.source.ksp
        2: support.variable.source.ksp

    - match: (?!#)\b(if|to|downto|else|for|while|select|case|continue)\b(?!#)
      comment: Control keywords
      scope: keyword.control.source.ksp

    - match: '((function|macro|taskfunc) +([a-zA-Z0-9_.#]+)\s*)\(?'
      comment: Function definition
      captures:
        1: meta.function.source.ksp
        2: keyword.other.source.ksp
        3: entity.name.function.source.ksp
      push:
        - meta_scope: function.ksp
        - match: \)|$
          pop: true
        - match: 'override'
          scope: keyword.other.source.ksp
        - match: 'out\s+|var\s+'
          scope: keyword.other.source.ksp
          comment: Task function keywords
        - match: '[a-zA-Z0-9_#.]+'
          scope: variable.parameter.function.source.ksp
        - include: main

    - match: '^\s*(const +)({{varchars}}+)'
      comment: Const block definition
      scope: constblock.ksp
      captures:
        0: meta.constblock.source.ksp
        1: keyword.other.source.ksp
        2: entity.name.type.source.ksp

    - match: '^\s*(family +)({{varchars}}+)'
      comment: Family definition
      scope: family.ksp
      captures:
        0: meta.family.source.ksp
        1: keyword.other.source.ksp
        2: entity.name.type.source.ksp

    - match: '^\s*(list +)({{varchars}}+)'
      comment: List definition
      scope: list.ksp
      captures:
        0: meta.list.source.ksp
        1: keyword.other.source.ksp
        2: entity.name.type.source.ksp

    - match: '^\s*(struct +)({{varchars}}+)'
      comment: Struct definition
      scope: struct.ksp
      captures:
        0: meta.struct.source.ksp
        1: keyword.other.source.ksp
        2: entity.name.type.source.ksp

    - match: '\b(call) +({{varchars}}+)?'
      comment: Function call using 'call'
      captures:
        1: keyword.other.source.ksp
        2: meta.function-call.source.ksp

    - match: '(?x)
              (declare|define)\s+
              (literals|global|local|(inst)?pers|read)?\s*
              (
                ui_button|
                ui_file_selector|
                ui_knob|
                ui_label|
                ui_level_meter|
                ui_menu|
                ui_mouse_area|
                ui_panel|
                ui_slider|
                ui_switch|
                ui_table|
                ui_text_edit|
                ui_value_edit|
                ui_waveform|
                ui_wavetable
              )\s*
              ((inst)?pers|read)?\s*
              (({{varchars}}+)?(\#(.+?)\#)?({{varchars}}+)?)\s*\('
      comment: Variable declaration
      captures:
        1: keyword.other.source.ksp
        2: keyword.other.source.ksp
        3: keyword.other.source.ksp
        4: keyword.other.source.ksp
        5: keyword.other.source.ksp
        6: keyword.other.source.ksp
        8: variable.source.ksp
        9: operator.source.ksp
        10: variable.source.ksp
        11: variable.source.ksp
      push:
        - match: \)|$
          pop: true
        - include: main

    - match: '(?!#)\b(struct|define|literals|on|(inst)?pers|read|list *|end list|call|step|function|taskfunc|macro|declare|const|polyphonic|end|local|global|family|import|as|property|override|declare|ui_(label|button|switch|slider|menu|value_edit|waveform|wavetable|knob|table|xy|text_edit|level_meter|file_selector|panel|mouse_area))\b(?!#)'
      comment: Other keywords
      scope: keyword.other.source.ksp

    - match: '"(?:[^"\\]|\\.)*"'
      comment: Double-quoted string
      scope: string.quoted.double.source.ksp

    - match: '''(?:[^''\\]|\\.)*'''
      comment: Single-quoted string
      scope: string.quoted.single.source.ksp

    - match: '(?x)
      (\$)?
      \b(
        ALL_(EVENTS|GROUPS)|
        CC_NUM|
        CONTROL_PAR_(
                     ACTIVE_INDEX|ALLOW_AUTOMATION|AUTOMATION_(ID|NAME)|
                     (BAR|BG|OFF|ON|OVERLOAD|PEAK|SLICEMARKERS|WAVE(_CURSOR|_END)?|WAVETABLE(_END)?|ZERO_LINE)_COLOR|
                     (BASE|FILE)PATH|(BG|WAVE(_END)?|WAVETABLE(_END)?)_ALPHA|
                     COLUMN_WIDTH|CURSOR_PICTURE|CUSTOM_ID|
                     DEFAULT_VALUE|DISABLE_TEXT_SHIFTING|DND_(ACCEPT_(ARRAY|AUDIO|MIDI)|BEHAVIOUR)|
                     ENABLE_DND|
                     FILE_TYPE|FONT_TYPE(_OFF_HOVER|_OFF_PRESSED|_ON|_ON_HOVER|_ON_PRESSED)?|
                     GRID_(HEIGHT|WIDTH|X|Y)|
                     HEIGHT|HELP|HIDE|
                     IDENTIFIER|
                     KEY_(ALT|CONTROL|SHIFT)|
                     LABEL|
                     (MAX|MIN)_VALUE|MIDI_EXPORT_AREA_IDX|MOUSE_(BEHAVIOUR(_X|_Y)?|MODE)|
                     NKS_(NUM_VALUES|STR_VALUES|STYLE|TYPE)|NONE|NUM_ITEMS|
                     PARALLAX_(X|Y)|
                     PARENT_PANEL|PICTURE(_STATE)?|POS_(X|Y)|RANGE_(MAX|MIN)|RECEIVE_DRAG_EVENTS|
                     SELECTED_ITEM_IDX|SHORT_NAME|SHOW_ARROWS|
                     TEXT(_ALIGNMENT|LINE|POS_Y)?|TYPE|
                     UNIT|
                     VALUE(POS_Y)?|VERTICAL|
                     (WF|WT)_VIS_MODE|WIDTH|WT_ZONE|
                     Z_LAYER
                    )|
        CURRENT_(EVENT|SCRIPT_SLOT)|
        DISTANCE_BAR_START|
        DURATION_(BAR|EIGHTH(_TRIPLET)?|QUARTER(_TRIPLET)?|SIXTEENTH(_TRIPLET)?)|
        EFFECT_TYPE_(
                     ACBOX|AET_FILTER|
                     BASSINVADER|BASSPRO|BIGFUZZ|BITE|BUS_COMP|
                     CABINET|CAT|CHORAL|CHORUS|COMPRESSOR|CRYWAH|
                     DELAY|DIRT|DISTORTION|DSTORTION|
                     EP_PREAMPS|
                     FB_COMP|FILTER|FLAIR|FLANGER|FREAK|FUZZ|
                     GAINER|
                     HOTSOLO|
                     INVERTER|IRC|
                     JUMP|
                     LIMITER|LOFI|
                     NONE|
                     PHASER|PHASIS|PLATEREVERB|PSYCHEDELAY|
                     RAUM|REPLIKA|REVERB(2)?|RINGMOD|ROTATOR|
                     SEND_LEVELS|SHAPER|SKREAMER|SOLID_GEQ|STEREO(_TUNE)?|SUPERGT|SURROUND_PANNER|
                     TAPE_SAT|TRANS_MASTER|TRANSLIM|TWANG|TWINDELAY|
                     VAN51|VIBRATO_CHORUS|
                     WOWFLUTTER
                    )|
        ENGINE_PAR_(
                    AC_(BASS|(BRILLIANT|NORMAL)VOLUME|MONO|TONECUT|TREBLE|TREMOLO(DEPTH|SPEED))|
                    ATK_CURVE|ATTACK(_UNIT)?|
                    AUX_LEVEL_[0-3]|
                    BANDWIDTH|
                    BASSINVADER_(BASS|BOOST|HI_BOOST|HI_MID|LO_CUT|LO_MID|MASTER|MID_CONTOUR|TREBLE|VOLUME)|
                    BASSPRO_(BASS|BRIGHT|DRIVE|GAIN|GEQ(_10K|_180|_1K|_2K|_300|_40|_4K|_500|_90|_VOLUME)?|MASTER|MID|MIDFREQ|MONO|TREBLE|ULTRA(HI|LO))|
                    BIGFUZZ_(BASS|MONO|SUSTAIN|TONE|TREBLE)|
                    BITE_(BITS|CRUNCH|DC_QUANT|DITHER|EXPAND|FREQUENCY|HPF|JITTER|MIX|(POST|PRE)FILTER|SATURATE)|
                    BITS|BREAK|BW[1-3]|
                    CABINET_TYPE|CB_(AIR|BASS|SIZE|TREBLE)|
                    CH_(DEPTH|PHASE|SPEED(_UNIT)?)|
                    CHORAL_(AMOUNT|DELAY|FEEDBACK|INVERT_PHASE|MIX|MODE|RATE|SCATTER|VOICES|WIDTH)|
                    COMP_(ATTACK|DECAY|LINK|TYPE)|
                    CT_(BALLS|BASS|DISTORTION|FILTER|MONO|TONE|TREBLE|VOLUME)|
                    CUTOFF|
                    CW_(MONO|PEDAL)|
                    DAMPING|
                    DECAY(_UNIT)?|DECAY(1(_UNIT)?|2(_UNIT)?)|
                    DIRT_((AMOUNT|DRIVE|BIAS|MODE|SAFETY|TILT)[A-B]|BLEND|MIX|ROUTING)|
                    DISTORTION_TYPE|
                    DL_(DAMPING|FEEDBACK|PAN|TIME(_UNIT)?)|DRIVE|
                    DS_(BASS|DRIVE|MID|MONO|TONE|TREBLE|VOLUME)|
                    (SEND_)?EFFECT_(BYPASS||TYPE)|EFFECT_SUBTYPE|
                    ENV_(AHD|DBD_EASY)|ENVELOPE_ORDER|
                    ENVF_(ADAPTION|ATTACK|GAIN_BOOST|RELEASE)|
                    EPP_(DRIVE(_MODE)?|EQ_(MODE|BASS|TREBLE)|PASSIVE_BASS|TREMOLO_(MODE|WAVE|RATE(_UNIT)?|AMOUNT|WIDTH)|MONO)|
                    EXP_FILTER_(AMOUNT|MORPH)|
                    EXTMOD_INTENSITY|
                    FCOMP_(ATTACK|HQ_MODE|INPUT|LINK|MAKEUP|MIX|RATIO|RELEASE)|
                    FILTER_(BYPA|BYPB|BYPC|GAIN|LADDER_HQ|RESB|RESC|SHIFTB|SHIFTC|TYPEA|TYPEB|TYPEC)|
                    FL_(COLOR|DEPTH|FEEDBACK|PHASE|SPEED(_UNIT)?)|
                    FLAIR_(AMOUNT|CHORD|DAMPING|DETUNE|FEEDBACK|INVERT_PHASE|MIX|MODE|OFFSET|PITCH|RATE(_UNIT)?|SCANMODE|VOICES|WIDTH)|
                    FLEXENV_(LOOP|ONESHOT)|
                    FORMANT(_(SHARP|SHIFT|SIZE|TALK))?|
                    FREAK_(ANTIFOLD|BP_(FILTER|FREQ)|CARRIER|CONTOUR|DEMOD|FEEDBACK|FREQUENCY|GATE|HARMONICS|MIX|MODE|RELEASE|STEREO|TUNING|TYPE|WIDE_RANGE|WIDTH)|
                    FREQ[1-3]|FREQUENCY|
                    FUZZ_(AMOUNT|BASS|MONO|TREBLE)|
                    GAIN([1-3])?|
                    GLIDE_COEF(_UNIT)?|
                    GN_GAIN|GRAIN_LENGTH|GROUP_DYNAMICS|
                    HOLD(_UNIT)?|(HP|LP)_CUTOFF|HQI_MODE|
                    HS_(BASS|DEPTH|MASTER|MID|MONO|OVERDRIVE|PRE(NORMAL|OVERDRIVE)|PRESENCE|TREBLE)|
                    (INSERT|SEND)_EFFECT_OUTPUT_GAIN|
                    INTMOD_(BYPASS|FREQUENCY(_UNIT)?|INTENSITY|PULSEWIDTH|RETRIGGER|SUBTYPE|TYPE)|
                    IRC_(AUTO_GAIN|ER_LR_BOUNDARY|FREQ_HIGHPASS_(ER|LR)|FREQ_LOWPASS_(ER|LR)|LENGTH_RATIO_(ER|LR)|PREDELAY|REVERSE)|
                    JMP_(BASS|HIGAIN|MASTER|MID|MONO|PREAMP|PRESENCE|TREBLE)|
                    LFO_(DELAY(_UNIT)?|NORMALIZE|PHASE|RAND|RECT|SAW|SINE|TRI)|
                    LIM_(IN_GAIN|RELEASE)|
                    LR_SWAP|
                    MOD_TARGET_(MP_)?INTENSITY|
                    NOISE(COLOR|LEVEL)|
                    OUTPUT_CHANNEL|
                    PAN|PHASE_INVERT|
                    PH_(DEPTH|FEEDBACK|PHASE|SPEED(_UNIT)?)|
                    PHASIS_(AMOUNT|CENTER|FEEDBACK|INVERT_(MOD_MIX|PHASE)|MIX|MOD_MIX|NOTCHES|RATE(_UNIT)?|SPREAD|STEREO|ULTRA)|
                    POST_FX_SLOT|
                    PR_(DECAY|HIDAMP|LOWSHELF|PREDELAY|STEREO)|
                    PSYDL_(DETUNE|(DETUNE|REVERSE)_STEREO|(CROSS_)?FEEDBACK|LR_OFFSET|PITCH|REVERSE|TIME(_UNIT)?)|
                    RATIO|
                    RAUM_(DAMPING|DECAY|DIFFUSION|FEEDBACK|FREEZE|HIGHCUT|LOWSHELF|MOD|PREDELAY(_UNIT)?|RATE|REVERB|SIZE|SPARSE|TYPE)|
                    RDL_(AMOUNT|BBDTYPE|DENSE|DEPTH|FEEDBACK|FLUTTER|(HIGH|LOW)CUT|MODULATION|NOISE|PINGPONG|QUALITY|RATE|SATURATION|SIZE|STEREO|TAPEAGE|TIME(_UNIT)?|TYPE)|
                    RELEASE(_UNIT|_TRIGGER)?|RESONANCE|
                    RINGMOD_(EDGE|FAST_MODE|FM|FREQUENCY|LFO_(AMOUNT|RATE(_UNIT)?|WAVE)|RING)|
                    RT_(ACCEL_(HI|LO)|BALANCE|DISTANCE|MIX|SPEED)|
                    RV2_(DAMPING|DIFF|HIGHCUT|LOWSHELF|MOD|PREDELAY|SIZE|STEREO|TIME|TYPE)|
                    RV_(COLOUR|DAMPING|PREDELAY|SIZE|STEREO)|
                    S1200_FILTER_MODE|
                    SCOMP_(ATTACK|LINK|MAKEUP|MIX|RATIO|RELEASE|THRESHOLD)|
                    SEND_EFFECT_DRY_LEVEL|
                    SENDLEVEL_(SMOOTHED_)?[0-7]|
                    SEQ_((HF|LF)_BELL|(HF|HMF|LMF|LF)_(FREQ|GAIN)|(HP|LP)(_FREQ)?|(HMF|LMF)_Q)|
                    SHAPE(_TYPE)?|
                    SK_(BASS|BRIGHT|DRIVE|MIX|TONE)|
                    SLICE_(ATTACK|RELEASE)|
                    SMOOTH|
                    SOURCE_MODE|
                    SP_(DIVERGENCE|LFE_VOLUME|OFFSET_(AZIMUTH|DISTANCE|X|Y)|SIZE)|
                    SPEED(_UNIT)?|
                    START_CRITERIA_(CC_(MAX|MIN)|CONTROLLER|CYCLE_CLASS|KEY_(MAX|MIN)|MODE|NEXT_CRIT|SEQ_ONLY|(SLICE|ZONE)_IDX)|
                    STEPSEQ_(NUM_STEPS|ONESHOT|STEP_VALUE)|
                    STEREO(_PAN|_PSEUDO)?|
                    STEREOTUNE_(DRIFT|MIX|SPLIT|SPREAD)|
                    SUPERGT_(ATTACK|(CHANNEL_LINK|CHAR|HPF|SAT)_MODE|CHARACTER|COMPRESS|MIX|RELEASE|SATURATION|TRIM)|
                    SUSTAIN|
                    TDL_(CROSS_FEEDBACK|FEEDBACK_(L|R)|LEVEL_(L|R)|PREDELAY_(L|R)(_UNIT)?|TIME_(L|R)(_UNIT)?|WIDTH)|
                    THRESHOLD|
                    TM_LEGATO|
                    TMPRO_KEEP_FORMANTS|
                    TP_(GAIN|HF_ROLLOFF|QUALITY|WARMTH)|
                    TR_(ATTACK|INPUT|SMOOTH|SUSTAIN)|
                    TRACKING|TRANSIENT_SIZE|
                    TRANSLIM_(CEILING|RELEASE|THRESHOLD)|
                    TUNE|
                    TW_(BASS|BRIGHT|MID|MONO|TREBLE|VOLUME)|
                    V5_(BASS|BRIGHT|CRUNCH|(HI|POST)GAIN|LEADCHANNEL|MID|MONO|PREGAIN(LEAD|RHYTHM)|PRESENCE|RESONANCE|TREBLE)|
                    VC_(BLEND|COLOR|DEPTH|MIX|RATE|WIDTH)|
                    VOLUME|
                    WOWFLUTTER_(AGE|FLUTTER|GATE|MIX|SATURATION|SCRAPE|SPEED|STEREO|WOW)|
                    WT_(FORM(_MODE)?|INHARMONIC(_MODE)?|PHASE(_RAND)?|POSITION|QUALITY)
                   )|
        ENGINE_UPTIME|
        ENV_TYPE_(AHDSR|DBD|FLEX)|
        EVENT_(ID|NOTE|STATUS_INACTIVE|STATUS_MIDI_QUEUE|STATUS_NOTE_QUEUE|VELOCITY)|
        EVENT_PAR_(
                   [0-3]|
                   ALLOW_GROUP|
                   CUSTOM|
                   ID|
                   MIDI_(BYTE_[1-2]|CHANNEL|COMMAND)|MOD_VALUE_(EX_)?ID|
                   NOTE(_LENGTH)?|
                   PAN|(PLAY_)?POS|
                   REL_VELOCITY|
                   SOURCE|
                   TRACK_NR|TUNE|
                   VELOCITY|VOLUME|
                   ZONE_ID
                  )|
        FILTER_TYPE_(
                     AR_(BP|HP|LP)(2?4?)|
                     BP(2|4)POLE|BR4POLE|
                     DAFT_(HP|LP)|
                     EQ[1-3]BAND|
                     FORMANT_[1-2]|
                     HP(1|2|4)POLE|
                     LADDER|
                     LDR_((BP|HP|LP)(2|4)|(HP|LP)(1|3)|NOTCH|PEAK)|
                     LP(1|2|4|6)POLE|
                     PHASER|
                     PRO52|
                     SIMPLE_LPHP|
                     SV_((BP|HP|LP)(2|4|6)|(HP|LP)1|NOTCH(4|6)|PAR_(BPBP|LPHP)|SER_LPHP)|
                     VERSATILE|
                     VOWEL[A-B]
                    )|
        GET_FOLDER_(FACTORY|INSTALL|LIBRARY|PATCH)_DIR|
        HIDE_(PART_(BG|CURSOR|MOD_LIGHT|NOTHING|TITLE|VALUE)|WHOLE_CONTROL)|
        IDX_OFFSET_EXT_MOD|
        INST_(ICON|LIB_(COPYRIGHT|DESCRIPTION|PIC_ONE|PIC_TWO)|PERFVIEW|WALLPAPER)_ID|
        INTMOD_TYPE_(ENV_FOLLOW|ENVELOPE|GLIDE|LFO|NONE|STEPMOD)|
        KEY_COLOR_(BLACK|BLUE|CYAN|DEFAULT|FUCHSIA|GREEN|INACTIVE|LIGHT_ORANGE|LIME|MAGENTA|MINT|NONE|ORANGE|PLUM|PURPLE|RED|TURQUOISE|VIOLET|WARM_YELLOW|WHITE|YELLOW)|
        KNOB_UNIT_(DB|HZ|MS|NONE|OCT|PERCENT|ST)|
        KSP_TIMER|
        LFO_TYPE_(MULTI(_DIGITAL)?|RANDOM|RECTANGLE|SAWTOOTH|SINE|TRIANGLE)|
        LOOP_PAR_(COUNT|LENGTH|MODE|START|TUNING|XFADE)|
        MARK_([1-9]|1[0-9]|2[0-8])|
        MIDI_(BYTE_[1-2]|(CHANNEL|COMMAND)|COMMAND_(CC|MONO_AT|NOTE_OFF|NOTE_ON|NRPN|PITCH_BEND|POLY_AT|PROGRAM_CHANGE|RPN))|
        MOD_TARGET_INVERT_SOURCE|
        NI_(
            ASYNC_(EXIT_STATUS|ID)|
            BAR_START_POSITION|
            BUS_OFFSET|
            BITE_HPF_MODE_(5|100|200)|
            CALLBACK_(ID|TYPE)|
            CB_TYPE_(ASYNC_COMPLETE|CONTROLLER|INIT|LISTENER|MIDI_IN|NOTE|NRPN|PERSISTENCE_CHANGED|PGS|POLY_AT|RELEASE|RPN|UI_CONTROL(S)?|UI_UPDATE)|
            CHORAL_MODE_(DIMENSION|ENSEMBLE|SYNTH|UNIVERSAL)|
            COMP_TYPE_(CLASSIC|ENHANCED|PRO)|
            CONTROL_PAR_IDX|CONTROL_TYPE_(BUTTON|FILE_SELECTOR|KNOB|LABEL|LEVEL_METER|MENU|MOUSE_AREA|NONE|PANEL|SLIDER|SWITCH|TABLE|TEXT_EDIT|VALUE_EDIT|WAVEFORM|WAVETABLE|XY)|
            DETECT_(
                    DRUM_TYPE_(CLAP|CLOSED_HH|CYMBAL|INVALID|KICK|OPEN_HH|PERC_DRUM|PERC_OTHER|SHAKER|SNARE|TOM)|
                    INSTRUMENT_TYPE_(BASS|BOWED_STRING|BRASS|FLUTE|GUITAR|INVALID|KEYBOARD|MALLET|ORGAN|PLUCKED_STRING|REED|SYNTH|VOCAL)|
                    SAMPLE_TYPE_(DRUM|INSTRUMENT|INVALID)
                   )|
            DIRT_(MODE_(I){1,3}|ROUTING_(ATOB|BTOA|PARALLEL))|
            DISTORTION_TYPE_(TRANS|TUBE)|
            DND_ACCEPT_(MULTIPLE|NONE|ONE)|
            EPP_(DRIVE_MODE_(BYPASS|(DE|US)_TUBE|TAPE|TRANSISTOR)|EQ_MODE_(70S|80S|BYPASS|PASSIVE)|TREMOLO_(MODE_(70S|80S|BYPASS|GUITAR|SYNTH)|WAVE_(SAW_(DOWN|UP)|SINE|SQUARE|TRIANGLE)))|
            FILE_(EXTENSION|FULL_PATH|FULL_PATH_OS|NAME)|
            FILE_TYPE_(ARRAY|AUDIO|MIDI)|
            FLAIR_(MODE_(SCAN|STANDARD|THRU_ZERO)|SCANMODE_(SAW_DOWN|SAW_UP|TRIANGLE))|
            FREAK_MODE_(OSCILLATOR|RADIO|SIDECHAIN)|
            GROUP_PAR_(COLOR|(HIGH|LOW)_KEY|NUM_ZONES)|
            HQI_MODE_(HIGH|PERFECT|STANDARD)|
            (INSERT|MAIN|SEND)_BUS|
            KEY_TYPE_(CONTROL|DEFAULT|NONE)|
            KONTAKT_IS_(HEADLESS|STANDALONE)|
            LEVEL_METER_(GROUP|INSERT|MAIN)|
            LOG_(MESSAGE|WARNING|WATCHING)|
            MOUSE_(EVENT_(TYPE(_DRAG|_DROP|_LEFT_BUTTON_DOWN|_LEFT_BUTTON_UP)?)|OVER_CONTROL)|
            NKS_(STYLE_(FILTERTYPE|KNOB|MENU|POWER|TEMPOSYNC|VALUE|WAVEFORM)|TYPE_(CONTINUOUS_(BI|UNI)|DISCRETE_(BI|UNI)|TOGGLE))|
            NOT_FOUND|
            RAUM_TYPE_(AIRY|COSMIC|GROUNDED)|
            REPLIKA_TYPE_(ANALOGUE|DIFFUSION|MODERN|TAPE|VINTAGE)|
            REVERB2_TYPE_(HALL|ROOM)|
            RINGMOD_LFO_WAVE_(SINE|SQUARE)|
            S1200_FILTER_((HIGH|LOW)(_MID)?|NONE)|
            SHAPE_TYPE_(CLASSIC|DRUMS|ENHANCED)|
            SIGNAL_(TIMER_(BEAT|MS)|TRANSP_(START|STOP)|TYPE)|
            SONG_POSITION|SOURCE_MODE_(BEAT_MACHINE|DFD|MP60_MACHINE|SAMPLER|S1200_MACHINE|TIME_MACHINE_(1|2|PRO)|TONE_MACHINE|WAVETABLE)|
            SUPERGT_(CHANNEL_LINK_MODE_(DUAL_MONO|MS|STEREO)|CHAR_MODE_(BRIGHT|FAT|WARM)|HPF_MODE_(100|300|OFF)|SAT_MODE_(HOT|MILD|MODERATE))|
            SYNC_UNIT_(16TH(_TRIPLET)?|256TH|32ND(_TRIPLET)?|64TH(_TRIPLET)?|8TH(_TRIPLET)?|ABS|HALF(_TRIPLET)?|QUARTER(_TRIPLET)?|WHOLE(_TRIPLET)?|ZONE)|
            TRANSPORT_RUNNING|
            UI_ID|
            VC_(COLOR_TYPE_[A-C]|DEPTH_[1-6])|
            VL_TMPRO_(HQ|STANDARD)|
            WF_VIS_MODE_[1-3]|
            WT_FORM_([2468]BLINDS|ASYM(2)?(M?P?)|BEND(2)?(M?P?)|EXP|FLIP|FOLD|LINEAR|LOG(EXP)?|MIRROR|PWM|QUANTIZE|SATURATE|SEESAW|SYNC[1-6]|WRAP)|
            WT_QUALITY_(BEST|HIGH|LOFI|MEDIUM)|
            WT_VIS_(2|3)D|
            ZONE_STATUS_(EMPTY|IGNORED|LOADED|PURGED)
           )|
        NOTE_HELD|
        NUM_(GROUPS|OUTPUT_CHANNELS|ZONES)|
        OUTPUT_TYPE_(AUX_OUT|BUS_OUT|DEFAULT|MASTER_OUT)|
        PLAYED_VOICES_(INST|TOTAL)|
        POLY_AT_NUM|
        REF_GROUP_IDX|RPN_(ADDRESS|VALUE)|
        SIGNATURE_(DENOM|NUM)|
        START_CRITERIA_((AND(_NOT)?|OR)_NEXT|CYCLE_(RANDOM|ROUND_ROBIN)|NONE|ON_(CONTROLLER|KEY)|SLICE_TRIGGER)|
        UI_WAVEFORM_(TABLE_IS_BIPOLAR|USE_MIDI_DRAG|USE_SLICES|USE_TABLE)|
        UI_WF_PROP_(FLAGS|MIDI_DRAG_START_NOTE|PLAY_CURSOR|TABLE_IDX_HIGHLIGHT|TABLE_VAL)|
        VALUE_EDIT_MODE_NOTE_NAMES|
        VCC_(MONO_AT|PITCH_BEND)|
        ZONE_PAR_(BPM|(FADE_)?(HIGH|LOW)_(KEY|VELO)|GROUP|PAN|ROOT_KEY|SAMPLE_(END|MOD_RANGE|RATE|START)|SELECTED|TUNE|VOLUME)|
        NI_DND_ITEMS_(ARRAY|AUDIO|MIDI)
       )\b|

      (%)?
      \b(
        CC(_TOUCHED)?|
        EVENT_PAR|
        GROUPS_(AFFECTED|SELECTED)|
        KEY_DOWN(_OCT)?|
        NI_USER_ZONE_IDS|
        NOTE_DURATION|
        POLY_AT
      )\b|

      (~)?
      \b(
        NI_DETECT_(LOUDNESS|PEAK|PITCH|RMS)_INVALID|
        NI_MATH_(E|PI)
      )\b|

      (!)?
      \b(
        NI_DND_ITEMS_(ARRAY|AUDIO|MIDI)
      )\b'
      comment: Builtin variable
      scope: support.variable.source.ksp

    - match: '(?x)
              \b(
                  END_INC|START_INC|
                  concat|float|list_add|
                  set_bounds|set_(slider|switch|label|menu|table|button|level_meter|waveform|knob)_properties|

                  END_USE_CODE|(RE)?SET_CONDITION|USE_CODE_IF(_NOT)?|

                  (_)?(get_engine_par(_disp)?|get_folder|
                       load_ir_sample|
                       num_slices|
                       pgs_create_key|pgs_get_key_val|pgs_key_exists|pgs_set_key_val|
                       read_persistent_var|reset_rls_trig_counter|
                       set_engine_par|set_skin_offset|slice_(idx_loop_(end|start)|length|loop_count|start)|
                       will_never_terminate
                      )|

                  abs|(a)?(cos|sin|tan)|add_(menu_item|text_line)|array_equal||attach_(level_meter|zone)|
                  by_(marks|track)|
                  cc_delivery_request|ceil|change_(listener_par|note|pan|time_with_pitch|tune|velo|vol)|(cb|sq)rt|
                  dec|delete_event_mark|detect_(pitch|rms|peak|loudness|sample_type|instrument_type|drum_type)|disable_logging|(dis)?allow_group|dont_use_machine_mode|
                  event_status|exit|exp(2)?|expose_controls|
                  fade_(in|out)|find_(group|mod|target|zone)|floor|fs_(get_filename|navigate)|
                  get_(
                        control_par(_arr|_real_arr|_str|_str_arr)?|
                        engine_par_(disp_)?m|
                        event_(ids|mark|par(_arr)?)|
                        font_id|
                        (group|mod|target)_idx|
                        group_par|
                        key_(color|name|triggerstate|type)|
                        keyrange_((max|min)_note|name)|
                        loop_par|
                        menu_item_(str|value|visibility)|
                        nks_nav_(name|par)|
                        num_zones|
                        purge_state|
                        sample(_length)?|sel_zones_idx|
                        ui_(id|wf_property)|
                        voice_limit|
                        zone_(id|par|status)
                      )|
                  group_name|guiidx_to_slotidx|
                  hide_part|
                  ignore_(controller|event|midi)|import_nckp|in_range|inc|int(_to_real)?|is_zone_empty|iterate_(post_)?macro|
                  literate_(post_)?macro|load_(array(_str)?|ir_sample_m|native_ui|midi_file|(next_)?patch|performance_view)|log(2|10)?|[l-m]sb|
                  make_((instr_)?persistent|perfview)|message|
                  mf_(
                       copy_export_area|
                       get_(
                             buffer_size|
                             byte_(one|two)|
                             channel|
                             command|
                             event_par|
                             first|
                             id|
                             last(_filename)?|
                             length|
                             mark|
                             next(_at)?|
                             note_length|
                             num_tracks|
                             pos|
                             prev(_at)?|
                             track_idx
                           )|
                       insert_(event|file)|
                       remove_event|
                       reset|
                       set_(
                             buffer_size|
                             byte_(one|two)|
                             channel|
                             command|
                             event_par|
                             export_area|
                             note_length|
                             num_export_areas|
                             length|
                             mark|
                             pos
                           )
                     )|
                  move_control(_px)?|ms_to_ticks|
                  note_off|num_(elements|slices_zone)|
                  output_channel_name|
                  pgs_(create_str_key|(get|set)_str_key_val|str_key_exists)|play_note|pow|purge_group|
                  random|real(_to_int)?|redirect_(midi|output)|remove_keyrange|reset_(engine|ksp_timer|nks_nav)|round|
                  save_(array(_str)?|midi_file)|search|
                  set_(
                        bounds|
                        (button|knob|label|level_meter|menu|slider|switch|table|text_edit|value_edit|waveform|wavetable2d|wavetable3d)_properties|
                        control_(help|par(_arr|_real_arr|_str|_str_arr)?)|
                        controller|
                        engine_par_m|
                        event_(mark|par(_arr)?)|
                        group_dyn_par_name|
                        key_(color|name|pressed(_support)?|type)|
                        keyrange|
                        kill_priority|
                        knob_(defval|label|unit)|
                        listener|
                        loop_par|
                        map_editor_event_color|menu_item_(str|value|visibility)|
                        midi|
                        nks_nav_(name|par)|
                        (n)?rpn|
                        num_user_zones|
                        sample|
                        script_title|
                        skin_offset|
                        snapshot_type|
                        table_steps_shown|
                        text|
                        ui_(color|height(_px)?|wf_property|width_px)|
                        voice_limit|
                        zone_par
                      )|
                  sgn|sh_(left|right)|show_library_tab|signbit|slotidx_to_guiidx|sort|stop_wait|
                  ticks_to_ms|
                  unload_slot|
                  wait(_async|_ticks)?|watch_(var|array_idx)|
                  zone_slice_(idx_loop_end|idx_loop_start|length|loop_count|start))\b'
      comment: Builtin function with arguments
      scope: support.function.source.ksp

    - match: '({{varchars}}*)\s*(\()'
      comment: Function call
      captures:
        1: meta.function-call.source.ksp meta.function-name
        2: meta.function-call.source.ksp punctuation.definition.arguments.begin.source.ksp
      push:
        - match: (\))|$
          captures:
            1: meta.function-call.source.ksp punctuation.definition.arguments.end.source.ksp
          pop: true
        - include: main

    - match: '(\b|[~?$%!@&]){{varchars}}+|\b\d+[A-Za-z_][A-Za-z0-9_]*\b'
      comment: Identifier
      scope: variable.source.ksp

    - match: '[:+]=|[=][+]|&|<=|>=|<|>|#|=|->|\.\.\.'
      comment: Operator
      scope: operator.source.ksp

    - match: "[-+*/]"
      comment: Arithmetic Operator
      scope: arithmetic.source.ksp

